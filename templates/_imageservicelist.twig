{#=== OPTIONS ========================================================================================================#}

{% set option = {
class:       ('form-control ' ~ field.class)|trim,
height:      field.height|default(''),
label:       field.label,
info:        field.info|default(''),
required:    field.required|default(false),
errortext:   field.error|default(''),
placeholder: field.placeholder|default(''),
} %}

{#=== INIT ===========================================================================================================#}

{% set attributes = {
text: {
class:           option.class,
data_errortext:  option.errortext,
name:            name,
required:        option.required,
style:           option.height ? 'height: ' ~ option.height ~ ';' : '',
}
} %}

{#=== Extensions Config ==============================================================================================#}
{% set config = imageserviceConfig() %}

{#=== FIELDSET =======================================================================================================#}

{% extends '@bolt/_base/_fieldset.twig' %}

{% block fieldset_type 'textarea' %}
{% block fieldset_widget 'fieldTextarea' %}

{% block fieldset_label_text  labelkey %}
{% block fieldset_label_info  option.info %}
{% block fieldset_label_class 'col-xs-12 control-label' %}

{% block fieldset_controls %}
    <div class="col-xs-12">

        {% set value = context.content.get(contentkey)|default(field.default)|default({items:[]}) %}

        <textarea {{ macro.attr(attributes.text) }}>{{ value|json_encode }}</textarea>

        <div id="imageservice-{{ name }}-list"></div>

        <script>

            $(window).on('load', function() {

                    // Disables the auto inline editor for conteneditable fields
                    if(typeof(CKEDITOR) !== 'undefined') {
                        CKEDITOR.disableAutoInline = true;
                    }

                    var defs = {
                        urls: {
                            {% for item in value.items|default([]) %}
                            "{{ item.id }}": "{{ imageservice(item,150,100) }}"{{ loop.last ?"":"," }}
                            {% endfor %}
                        }
                    };

                    // Racing condition in FireFox have been fixed with this time delay
                    var max = 10;
                    var period = null;
                    var imageService = null;

                    period = setInterval(function(){

                        if(max-- < 1)
                            clearInterval(period);

                        if(!window.hasOwnProperty('CnImageService'))
                            return;

                        imageService = new CnImageService({
                            cache: defs,
                            serviceUrl: '{{ paths.bolt }}image-service/image',
                            serviceName: '{{ field.service|default(config.defaultService) }}',
                            {% if field.maxFiles|default %}
                            maxFiles: {{ field.maxFiles }},
                            {% endif %}
                            maxFileSize: {{ field.maxFileSize|default(config.security['max-size']) }},
                            dataElement: '[name="{{ name }}"]',
                            hostElement: '[id="imageservice-{{ name }}-list"]',
                            attributes: {{ field.attributes|default([])|json_encode|raw }},
                            globals: {{ field.globals|default([])|json_encode|raw }}
                        });

                        clearInterval(period);

                    }, 300)

                });

        </script>

    </div>
{% endblock fieldset_controls %}
